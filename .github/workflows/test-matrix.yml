name: Test Matrix

on:
  push:
    branches:
      - main
      - master
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/test-matrix.yml'
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday
  workflow_dispatch:

permissions:
  contents: read
  checks: write

jobs:
  test-matrix:
    name: Test (${{ matrix.os }} / Go ${{ matrix.go-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.22', '1.23', '1.24']
        exclude:
          # Exclude certain combinations if needed
          - os: windows-latest
            go-version: '1.22'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Install test tools
        run: |
          go install github.com/gotestyourself/gotestsum@latest
          go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Run tests
        id: test
        run: |
          mkdir -p test-results coverage
          
          gotestsum --junitfile test-results/junit-${{ matrix.os }}-go${{ matrix.go-version }}.xml \
                    --format short \
                    -- \
                    -v \
                    -race \
                    -coverprofile=coverage/coverage-${{ matrix.os }}-go${{ matrix.go-version }}.out \
                    -covermode=atomic \
                    -timeout 10m \
                    ./evidence/...
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-go${{ matrix.go-version }}
          path: |
            test-results/
            coverage/
          retention-days: 30

      - name: Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: 'Tests (${{ matrix.os }} / Go ${{ matrix.go-version }})'
          path: 'test-results/junit-*.xml'
          reporter: java-junit
          fail-on-error: false

  test-summary:
    name: Test Summary
    needs: test-matrix
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          merge-multiple: true

      - name: Generate summary
        run: |
          echo "## Test Matrix Results 🧪" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| OS | Go Version | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|---|" >> $GITHUB_STEP_SUMMARY
          
          for file in test-results/junit-*.xml; do
            if [ -f "$file" ]; then
              filename=$(basename "$file" .xml)
              os_go=$(echo "$filename" | sed 's/junit-//')
              
              # Parse test results
              if grep -q 'failures="0"' "$file" && grep -q 'errors="0"' "$file"; then
                echo "| ${os_go} | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
              else
                echo "| ${os_go} | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          done
